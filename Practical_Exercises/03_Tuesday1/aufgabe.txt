    Übung für Dienstag (Abschluss des Vormittags-Kapitels)
    ======================================================
    
    Betrachten Sie die beiden Programme im Unterverzeichnis
    "More_Examples/Sumlines" mit Namen step1.cpp und step2.cpp.
    
    Analysieren Sie insbesondere, wie hier jeweils eine Eingabezeile gelesen
    wird, daraus alle enthaltenen Ganzzahlen extrahiert und diese schließlich
    aufsummiert und ausgegeben werden.
    
    Sie können die Programm auch kompilieren und ausprobieren. Wenn Sie dies
    unter Eclipse tun möchten, machen Sie davon am besten eine Kopie in das
    Verzeichnis, in dem Eclipse die Quelltexte eines Projekts ablegt.
    
    1. Abschnitt
    ------------
    
    Welcher Aufwand wäre es in jedem dieser Programme jeweils Leerzeilen zu
    erkennen und nicht weiter zu berücksichtigen? Setzen Sie eine solche
    Änderung zumindest in einem der beiden Programme um, am besten in
    demjenigen, in dem es Ihnen am einfachsten erscheint.
    
    Wie reagieren die beiden Programme auf unzulässige Eingaben, also Zeilen,
    die nicht nur durch Whitespace getrennte Ganzzahlen enthalten?
    
    Überlegen Sie sich Verbesserungsmaßnahmen an BEIDEN Programmen mit dem
    Ziel, dass jede Zeile, welche andere Zeichen als die zulässigen enthält,
    INSGESAMT (also mit ihrem kompletten Inhalt) als fehlerbehaftet angesehen
    und ignoriert wird. (Damit dies bei der Benutzung zu erkennen ist, sollte
    natürlich eine Fehlermeldung ausgegebenen werden.)
    
    2. Abschnitt
    ------------
    
    Schauen Sie sich jetzt das Programm step3.cpp im Vergleich zu step1.cpp an.
    Es verarbeitet Gleitpunktzahlen statt Ganzzahlen. Wie hoch schätzen Sie den
    Aufwand (Zeitdauer), den diese Änderung gekostet hat und wie schätzen Sie
    den Aufwand ein, eine entsprechende Änderung an step2.cpp vorzunehmen. (Es
    reicht, wenn Sie eine Zeitschätzung vornhmen, die tatsächliche Umsetzung
    ist optional.)
    
    3. Abschnitt
    ------------
    
    Bauen Sie auch in step3.cpp eine Fehlerbehandlung ein, welche ungültige
    Zeilen aussortiert. Setzen Sie zur Umwandlung und Erkennung ungültiger
    Eingaben EINES der folgenden Verfahren nach Ihrer Wahl ein (wenn
    ausreichend Zeit ist, können Sie auch mehrere alternativ ausprobieren):
    
    (a) Für jede einzelne Zahl BEI Umwandlung mit std::strtod und Prüfung
	desjenigen Zeichens, welche die Umwandlung beendet hat.

    (b) Für jede einzelne Zahl BEI Umwandlung mit boost::lexical_cast Abfangen
	der ggf.  geworfenen Exception.
    
    (c) Für jede einzelne Zahl VOR Umwandlung Test mit regulärem Ausdruck, ob
	es sich um eine Gleitpunktzahl handelt.
    
    (d) Für die gesamte Zeile VOR Zugriff auf die einzelnen, darin enhaltenen
        Zahlen Prüfung mit regulärem Ausdruck, ob es sich um eine durch Leerzeichen
        getrennte Folge von Gleitpunktzahlen handelt.
    
	Hinweis: da der komplette Test auf Gleitpunktzahl (oder nicht) sich über
	einen Regulären Ausdruck recht aufwändig gestalten kann, können Sie sich
	auch darauf beschränken, dass als gültige Eingaben nur Gleitpunkzahlen mit
	genau zwei oder überhaupt keinen Nachkommastellen angesehen werden,
    
    
    
    
    
    
    
    
    
    
    
    4. Abschnitt
    ------------
    
    Schreiben Sie das Programm nochmals um: gültige Eingaben (also die
    einzelnen Zahlen, die in einer Zeile auftreten dürfen), sollen nun auf die
    in Deutschland übliche Art der Darstellung von Eurobeträgen (OHNE Angabe
    "EUR" oder "€") eingeschränkt sein, d.h.:
    
    * EXAKT Nachkommestellen mit Komma getrennt ODER ",-" ODER überhaupt keine
      Angabe;
    
    * Ganzzahliger Euro-Betragsteil von rechts in Dreiergruppen
      zusammengefasst, die jeweils durch einen Punkt voneinander getrennt sind.
    
      Nehmen Sie dazu in einem ersten Schritt die Korrektheitsanalyse mit einem
      passenden regulären Ausdruck vor.
    
      Entfernen Sie in einem zweiten Schritt die Punkt-Trennzeichen der
      Dreierguppen.
    
      Ersetzen Sie im dritten Schritt Komma-Trenner des Nachkommateils durch
      einen Punkt.
    
      Wandeln Sie im vierten Schritt in eine Gleitpunktzahl um. (Da das Format
      jetzt geprüft ist, erübrigt sich dabei eine erneute Fehlerbehandlung.)
    
    Optional (wenn noch Zeit dafür ist):
    -----------------------------------
    
    Greifen Sie in auf den Euro und den Cent-Teil GETRENNT zu und erledigen sie
    das Aufsummieren Cent-Genau in einer Variablen vom Typ long long. Erzeugen
    Sie die Ausgabe im selben Format, das für die Eingabe verlangt war, also
    
    * Cent-Betrag mit Komma getrennt und nur dann, wenn nicht Null (relativ
      einfach) und
    
    * Euro-Betrag in durch Punkt getrennten Gruppen zu je drei Ziffern (nicht
      ganz so einfach,daher als Tipp: verwenden Sie für Beträge größer 999 Euro
      Rekursion).

